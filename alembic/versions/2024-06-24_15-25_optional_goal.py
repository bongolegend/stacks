"""optional-goal

Revision ID: 64438939b117
Revises: 7d83a97af5cf
Create Date: 2024-06-24 15:25:27.906812

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision: str = '64438939b117'
down_revision: Union[str, None] = '7d83a97af5cf'
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.add_column('goals', sa.Column('parent_id', sa.UUID(), nullable=True))
    op.alter_column('goals', 'title',
               existing_type=sa.VARCHAR(),
               nullable=True)
    op.alter_column('goals', 'due_date',
               existing_type=postgresql.TIMESTAMP(timezone=True),
               nullable=True)
    op.create_foreign_key(None, 'goals', 'goals', ['parent_id'], ['id'], ondelete='CASCADE')
    # ### end Alembic commands ###

    op.execute('''
                INSERT INTO goals (id, user_id, parent_id, description, is_completed, created_at, updated_at)
                SELECT
                    id, 
                    user_id, 
                    goal_id AS parent_id,
                    description,
                    is_completed, 
                    created_at, 
                    updated_at
                FROM tasks;
                ''')
    
    op.execute('''
               UPDATE REACTIONS
               SET goal_id = task_id
                WHERE goal_id IS NULL;
                ''')
    
    op.execute('''
               UPDATE COMMENTS
               SET goal_id = task_id
                WHERE goal_id IS NULL;
                ''')



def downgrade() -> None:
    op.execute('''
               UPDATE COMMENTS
                SET goal_id = NULL
                 WHERE task_id IS NOT NULL;
                 ''')
    op.execute('''
                UPDATE REACTIONS
                 SET goal_id = NULL
                  WHERE task_id IS NOT NULL;
                  ''')
    op.execute('''
                DELETE FROM goals
                 WHERE parent_id IS NOT NULL;
                 ''')
    

    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_constraint(None, 'goals', type_='foreignkey')
    op.alter_column('goals', 'due_date',
               existing_type=postgresql.TIMESTAMP(timezone=True),
               nullable=False)
    op.alter_column('goals', 'title',
               existing_type=sa.VARCHAR(),
               nullable=False)
    op.drop_column('goals', 'parent_id')
    # ### end Alembic commands ###
