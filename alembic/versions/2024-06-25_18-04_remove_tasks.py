"""remove-tasks

Revision ID: 68be9d4dbb8b
Revises: 64438939b117
Create Date: 2024-06-25 18:04:04.062143

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision: str = '68be9d4dbb8b'
down_revision: Union[str, None] = '64438939b117'
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_constraint('comments_task_id_fkey', 'comments', type_='foreignkey')
    op.drop_column('comments', 'task_id')
    op.drop_constraint('reactions_task_id_fkey', 'reactions', type_='foreignkey')
    op.drop_column('reactions', 'task_id')
    op.drop_table('tasks')
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('tasks',
    sa.Column('id', sa.UUID(), server_default=sa.text('uuid_generate_v4()'), autoincrement=False, nullable=False),
    sa.Column('user_id', sa.UUID(), autoincrement=False, nullable=False),
    sa.Column('goal_id', sa.UUID(), autoincrement=False, nullable=False),
    sa.Column('description', sa.TEXT(), autoincrement=False, nullable=False),
    sa.Column('is_completed', sa.BOOLEAN(), autoincrement=False, nullable=True),
    sa.Column('created_at', postgresql.TIMESTAMP(timezone=True), server_default=sa.text('now()'), autoincrement=False, nullable=True),
    sa.Column('updated_at', postgresql.TIMESTAMP(timezone=True), server_default=sa.text('now()'), autoincrement=False, nullable=True),
    sa.ForeignKeyConstraint(['goal_id'], ['goals.id'], name='tasks_goal_id_fkey'),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], name='tasks_user_id_fkey', ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id', name='tasks_pkey')
    )
    
    op.add_column('reactions', sa.Column('task_id', sa.UUID(), autoincrement=False, nullable=True))
    op.create_foreign_key('reactions_task_id_fkey', 'reactions', 'tasks', ['task_id'], ['id'])
    op.add_column('comments', sa.Column('task_id', sa.UUID(), autoincrement=False, nullable=True))
    op.create_foreign_key('comments_task_id_fkey', 'comments', 'tasks', ['task_id'], ['id'])
    # ### end Alembic commands ###
